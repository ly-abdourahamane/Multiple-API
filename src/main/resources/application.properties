# App
server.port= 8000

java.runtime.version=10

# PostgreSQL Database
#spring.datasource.url=jdbc:postgresql://localhost:5432/demo1
#spring.datasource.username=rmitula
#spring.datasource.password=password
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.datasource.initialization-mode=always

# H2 Database (database name: testdb)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.initialization-mode=always

## Hibernate Logging
spring.jpa.show-sql=false

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000


## TÉLÉCHARGEMENT DE DOCUMENTS
# Enable multipart uploads
spring.servlet.multipart.enabled=true

# SEUIL APRÈS ECRITURE DANS LE DISQUE
spring.servlet.multipart.file-size-threshold=2KB

# TAILLE MAXIMALE DE FICHIERS
spring.servlet.multipart.max-file-size=200MB
# TAILLE MAXIMALE DES REQUETES
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# DEFINITION DU REPERTOIRE DE STOCKAGE DES FICHIERS
file-storage.upload-dir=UPLOAD-FILES
